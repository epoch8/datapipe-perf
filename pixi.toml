[workspace]
authors = ["Andrey Tatarinov <a@tatarinov.co>"]
channels = ["conda-forge"]
name = "datapipe-perf"
platforms = ["linux-64"]
version = "0.1.0"

[dependencies]
python = ">=3.12.12,<3.15"
pandas = "*"
numpy = "<2"  # почему-то datapipe-core требует numpy<2
altair = ">=5.5.0,<6"

[pypi-dependencies]
marimo = {version = ">=0.17.2, <0.18", extras = ["all"]}

### Python 3.12

[feature.py12.dependencies]
python = "3.12.*"

[feature.py12.pypi-dependencies]
pytest = "*"
pytest-cases = "*"
psutil = "*"
toml = "*"
pydantic-settings = "*"
types-toml = "*"

### Datapipe stable

[feature.dtp-stable.pypi-dependencies]
datapipe-core = { version = "==0.14.5" }

### Datapipe swcv
[feature.dtp-pr355.pypi-dependencies]
datapipe-core = { git = "https://github.com/epoch8/datapipe.git", rev = "9e8d3d5669a2fe756c3dd5c3bac475080695d353" } # branch = "feat/fill-transaction-meta-on-chunk-store"

###
[feature.dtp-offsets.pypi-dependencies]
datapipe-core = { git = "https://github.com/halconel/datapipe.git", branch = "Looky-7769/offsets" }

### Postgres 13

[feature.db-postgres13.pypi-dependencies]
psycopg2-binary = "*"

[feature.db-postgres13.activation.env]
TEST_DB_ENV = "postgres"
POSTGRES_HOST = "localhost"
POSTGRES_PORT = "5432"
POSTGRES_PASSWORD = "pass"

[feature.db-postgres13.tasks]
setup-db = "docker run --name datapipe-postgres13 -e POSTGRES_PASSWORD=pass -p 5432:5432 -d postgres:13"
wait-for-db = "sh -c 'until docker exec datapipe-postgres13 pg_isready -U postgres; do sleep 1; done'"
cleanup-db = "docker rm -f datapipe-postgres13"

### Postgres 18

[feature.db-postgres18.pypi-dependencies]
psycopg2-binary = "*"

[feature.db-postgres18.activation.env]
TEST_DB_ENV = "postgres"
POSTGRES_HOST = "localhost"
POSTGRES_PORT = "5432"
POSTGRES_PASSWORD = "pass"

[feature.db-postgres18.tasks]
setup-db = "docker run --name datapipe-postgres18 -e POSTGRES_PASSWORD=pass -p 5432:5432 -d postgres:18"
wait-for-db = "sh -c 'until docker exec datapipe-postgres18 pg_isready -U postgres; do sleep 1; done'"
cleanup-db = "docker rm -f datapipe-postgres18"

### SQlite

[feature.db-sqlite.pypi-dependencies]
datapipe-core = { extras = ["sqlite"] }

[feature.db-sqlite.tasks]
setup-db = "echo 'its sqlite, no setup needed'"
wait-for-db = "echo 'its sqlite, no wait needed'"
cleanup-db = "rm -f benchmark.db"

###

[environments]
py12-dtp-stable-sqlite = ["py12", "dtp-stable", "db-sqlite"]
py12-dtp-stable-postgres13 = ["py12", "dtp-stable", "db-postgres13"]
py12-dtp-stable-postgres18 = ["py12", "dtp-stable", "db-postgres18"]

py12-dtp-pr355-postgres13 = ["py12", "dtp-pr355", "db-postgres13"]

py12-dtp-offsets-postgres13 = ["py12", "dtp-offsets", "db-postgres13"]

[tasks]
# benchmark-run = "python -m benchmark.dv_pipeline.incremental_update_throughput"
benchmark-run = "python run_benchmarks.py"

[tasks.benchmark]
depends-on = ["setup-db", "wait-for-db", "benchmark-run", "cleanup-db"]
